进程基础
=========

1 进程特性
--------------

- 进程: 代码段 + 上下文, 执行器的程序以及相关资源的总称
- 进程存放在task list的双向循环链表中, 用进程描述符PID表示(数据结构为task_struct, 1.7KB)
- 进程状态: 运行, 可中断, 不可中断, 跟踪, 停止
- init进程是init_task静态分配的
- 内核支持抢占需要开启 ``CONFIG_PREEMPT`` 选项

1.1 进程创建过程
-----------------

1. fork()复制一个现有进程创建全新进程, 与全新进程的区别只是pid,ppid和某些资源统计差异
2. exec()创建新的地址空间, 并把新程序载入
3. exit()退出进程, 释放占用资源

.. note:: 
    
    - 进程退出后为僵死态, 直到父进程调用wait(), 或之前设置了脱离
    - fork使用写实拷贝, 父子进程共享一个拷贝, 只有再需要写入时, 数据才会复制
    - fork实际开销就是复制父进程的页表以及设置pid


4 用途代码
------------

.. code-block:: c

    # 1 获取父进程描述符
    struct task_struct *parent = current->parent;

