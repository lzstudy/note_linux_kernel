进程调度
=========

1 基本概念
-------------

- 进程分为实时进程和非实时进程, 非实时进程又分为交互(IO消耗型)式和批处理式(处理器消耗型)

1.1 术语
*************

======== ====================================== ===============================
缩写      全写                                   说明
RSDL     rotating staircase deadline scheduler  翻转楼梯最后期限算法
CFS      completely fair scheduling             完公平调度算法
dl       deadline                               最后期限
RR       round robin                            实时策略
edf      earliest deadline first                最早截止期优先调度算法
rq       runqueue                               运行队列
======== ====================================== ===============================

2 调度策略与调度器
----------------------

2.1 调度策略
**************

调度策略是抽象的概念(用宏定义的方式表示), 调度策略本质上通过调度器类来实现, 内核一共有6种调度策略

=============== ===================== ============== ==================================
策略             进程类型              调度算法        说明
SCHED_NORMAL     普通进程              CFS            默认进程既此类型
SCHED_BATCH      普通进程              CFS            批处理进程
SCHED_FIFO       实时进程                             高优先级运行直到主动退出
SCHED_RR         实时进程                             高优先级运行, 同等优先级时间片轮转
SCHED_DEADLINE   实时进程
SCHED_IDLE       空闲进程                             只作用于IDLE线程
=============== ===================== ============== ==================================

2.2 调度器组成
*****************

1. linux的调度程序由两个调度器组成: 主调度器 + 周期性调度器, 统称核心调度器
2. 每个调度器由5个调度器类组成: stop_sched_class, dl_sched_class, rt_sched_class, fair_sched_class, idle_sched_class
3. 每个进程有3个调度器实体: sched_dl_entity, sched_rt_entity, sched_entity 



2 内核常用调度方法
-------------------

1. SECHED_OTHER, 分时调度策略(CFS)
2. SCHED_FIFO, 实时调度策略, 先到先服务
3. SCHED_RR, 实时调度策略, 时间片轮转

.. note:: 

    - SCHED_RR: 典型的时间片轮转调度策略, 相同优先级, 时间片运行完后, 放入就绪队列尾部, nice值转为时间片长度
    - SCHED_FIFO: CPU一直运行, 直到有更高优先级或者自己放弃(相同优先级也不行)

.. tip:: 

    - 实时优先级范围 0 - 99 
    - 就绪态实时任务立即抢占非实时任务



2 完全公平调度CFS
--------------------

3 实时调度FIFO
----------------

- 

4 实时调度RR
--------------

- 进程时间片用完后, 放于就绪队列尾


2 调度算法
------------------

2.1 参考文件
*************

==================== ==============================
kernel/sched.c        基础调度器代码
kernel/sched_fair.c   CFS调度算法代码
==================== ==============================



3 调度策略
------------

进程优先级有两种策略: 根据nice值 + 设置实时优先级

3.1 根据nice值调度
********************

.. code-block::

   - nice值范围 -20 ~ 19, 默认0 
   - nice越大优先级越低, nice值代表时间片的比例, 越大代表时间越多
   - ps -el查看nr的值来看nice值

3.2 实时优先级调度
********************

.. code-block::

    - 范围0 - 99, 越高优先级越高
    - ps -eo state,uid,pid,ppid,rtprio,time,comm 如果显示 - 表示它不是实时进程


4 完全公平调度CFS
------------------

- CFS理念: 每个进程将能获得1/n得处理器时间, n是指可运行得进程数量
- CFS组成: 时间记账, 进程选择, 调度器入口, 睡眠和唤醒


